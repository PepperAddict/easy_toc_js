== Table of contents javascript
This is a simple way to create table of contents using header tags.
It will retrieve the header tags inside the contents ID and spit out into the toc ID.

== Usage
=== the Content
Wrap the content that you want with the ID: *contents*. 
Example below will not include header title since it is not inside the contents div.

----
<h1>title</h1>

<div id="contents">
<h1>listing 1</h1>
<h1>Listing 2</h1>
</div>
----

=== the TOC
We need a placeholder for the actual table of contents. To do this, insert a div with the ID: *toc*.
Inside the div, be sure to have the title of the table of contents if you want any.


----
<div id="toc">
Table of contents
</div>
----

=== the JS
I changed the JavaScript to ES6 and took out the unecessary if statement. +
The li class in CSS will be the biggest factor in its indentation. 

----
window.onload = function () {
    let toc = '';
    let level = 0;
    const search = /<h([\d])>([^<]+)<\/h([\d])>/gi;

    function table (regExp, substr, subReplacer) {
        level = parseInt(substr);
        const anchor = subReplacer.replace(/ /g, "_");
        toc += `<li class="tocl${level}"><a href="#${anchor}">${subReplacer}</a></li>`;   
        return ` <h${substr}> <a href="#${anchor}" id=${anchor}>${subReplacer}</a></h${substr}>`;  
}

    document.getElementById("contents").innerHTML = document.getElementById("contents").innerHTML.replace(search, table);
    document.getElementById("toc").innerHTML += toc;
};
----

=== the CSS 
Just take a peak to figure out what's going on. Nothing special. Just give the h1- h3 a property.

* original link:css/style.scss[scss]
* compiled link:css/style.css[css]

== Note
Keep in mind when styling, I decided to use dt and dd instead of the usual ul and li. I just found dt and dd easier to separate in one line.

link:https://www.w3schools.com/tags/tag_dd.asp[w3school:dd tag]

== That's it.
You can now easily customize the style your way or use mine.